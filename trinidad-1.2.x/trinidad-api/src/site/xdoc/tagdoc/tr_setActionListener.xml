<?xml version="1.0" encoding="UTF-8" ?>
<!--
  Copyright 2006 The Apache Software Foundation.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<document>
 <properties>
  <title>tr:setActionListener</title>
 </properties>
 <body>
 <section name="Summary">
 <p>
   <b>Tag name:</b> &lt;tr:setActionListener&gt;
   <br/>
<p>

        The setActionListener tag is a declarative way to allow an
        action source (&lt;commandButton&gt;, &lt;commandLink&gt;,
        etc.) to set a value before navigation.  It is perhaps most
        useful in conjunction with the "processScope" EL scope
        provided by ADF Faces, as it makes it possible to pass details
        from one page to another without writing any Java code.  This
        tag can be used both with ADF Faces commands and JSF standard
        tags.  More generally, it can be used with any component at
        all that implements the standard ActionSource interface.
        <b>Note</b> that JSF comes with a &lt;tr:setPropertyActionListener&gt;, which
        does exactly the same.

</p><h4>Example:</h4><p>

           This example shows a table with a "Show..." button.  When
the button is pressed, the following will happen:

<ol>

<li>The value of "#{row}" will be retrieved - which corresponds to the
current row in the table.</li>

<li>That object will get stored as the "detail" property in process
scope.</li>

<li>The user will navigate to the "showDetail" outcome of this page (because of the "action" property on the &lt;h:commandButton&gt;).</li>

</ol>

The target page can then retrieve the detail object from the process scope and use it as needed.

          </p><source>
            &lt;h:dataTable var="row" value="#{....}"&gt;
              ...
              &lt;h:column&gt;
                &lt;h:commandButton value="Show..." action="showDetail" ..&gt;
                  &lt;tr:setActionListener from="#{row}"
                                        to="#{processScope.detail}"/&gt;
                &lt;/h:commandButton&gt;
              &lt;/h:column&gt;
            &lt;/h:dataTable&gt;</source>
 </p>
 </section>
 <section name="Attributes">
<table>
<tr>
<th>Name</th>
<th>Type</th>
<th>Supports EL?</th>
<th>Description</th>
</tr>
<tr>
<td>from</td><td>Object</td><td>Yes</td><td>

          the source of the value;  can be an EL expression or a constant value
        </td>
</tr>
<tr>
<td>to</td><td>Object</td><td>Only EL</td><td>

          the target for the value;  must be an EL expression
        </td>
</tr>
</table>
 </section>
 </body>
</document>
