<?xml version="1.0" encoding="ISO-8859-1" ?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.
	   
-->
<document>
  <properties>
    <title>Installation</title>
  </properties>

  <body>
    <section name="Installation">
      <p>
        <ul>
          <li>
            <a href="#Dependencies">Dependencies</a>
          </li>
          <li>
            <a href="#Deliverables">Deliverables</a>
          </li>
          <li>
            <a href="#General Installation">General Installation</a>
          </li>
          <li>
            <a href="#Demos">Demos</a>
          </li>
          <li>
            <a href="#Platform Information">Platform Information</a>
          </li>
        </ul>
      </p>
      </section>
    <section name="Dependencies">
  <p>
Dependencies of Apache Trinidad include:
          <ul>
            <li>Java 5</li>
            <li>Either the JSF 1.1 reference implementation or later or MyFaces 1.0.8 or later, and their respective dependencies.</li>
          </ul>
        </p>
    </section>
    <section name="Deliverables">
        <p>
The Apache Trinidad deliverables are:
          <ul>
            <li>trinidad-api-1.0.1-SNAPSHOT.jar: public APIs of Apache Trinidad, all in the org.apache.myfaces.trinidad package</li>
            <li>trinidad-impl-1.0.1-SNAPSHOT.jar: private APIs of Apache Trinidad, all in the org.apache.myfaces.trinidadinternal package</li>
          </ul>
        </p>
        <p>
Developers are strongly encouraged to compile against the Trinidad API 
JAR only - this will ensure that you are only using public APIs.
</p>



</section>
<section name="General Installation">
<p>
Apache Trinidad is designed to run on any J2EE-compliant application server.
To install Apache Trinidad outside of a JDeveloper-based environment, take
the following steps:

<ol>
<li>Install either JSF 1.1.01 reference implementation or MyFaces 1.0.8 or later, and their respective dependencies.  Please consult your application
server provider for documentation on this step.  </li>
<li>Install the <a href="#Deliverables">Apache Trinidad libraries</a>
and <a href="#Dependencies">dependencies</a> in <code>WEB-INF/lib</code>.</li>
<li>Register the Apache Trinidad filter in your <code>WEB-INF/web.xml</code>:
<source><![CDATA[
  <filter>
    <filter-name>trinidad</filter-name>
    <filter-class>org.apache.myfaces.trinidad.webapp.TrinidadFilter</filter-class>
  </filter>

  <filter-mapping>
    <filter-name>trinidad</filter-name>
    <!-- This assumes that the FacesServlet has been registered -->
    <!-- under the name "faces" -->
    <servlet-name>faces</servlet-name>
  </filter-mapping>
]]>
</source>
</li>
<li>
Tell JSF to use the Apache Trinidad RenderKit by adding the following to
your faces-config.xml:
<source><![CDATA[
  <application>
    <default-render-kit-id>
      org.apache.myfaces.trinidad.core
    </default-render-kit-id>
  </application>
]]>
</source>
</li>
<li>
Register the ResourceServlet that would be used for serving the resources at runtime(images, javascripts and styles):
<source><![CDATA[
 <servlet>
  <servlet-name>resources</servlet-name>
  <servlet-class>org.apache.myfaces.trinidad.webapp.ResourceServlet</servlet-class>
 </servlet>

<!-- This cannot be configured currently -->
<servlet-mapping>
    <servlet-name>resources</servlet-name>
    <url-pattern>/adf/*</url-pattern>
</servlet-mapping>


]]>
</source>
</li>
</ol>

</p>
<p>
In addition, it is strongly recommended that you enable client-side
state saving, again in <code>WEB-INF/web.xml</code>.  Apache Trinidad offers
a much improved version of client-side state saving that is a
significant improvement over standard server-side state saving.  State
is still saved in the <code>HttpSession</code>, but a token is sent to
the client to disambiguate instances of a page, and session-based
state is serializable to support failover.

<source><![CDATA[
  <context-param>
    <param-name>javax.faces.STATE_SAVING_METHOD</param-name>
    <param-value>client</param-value>
  </context-param>
]]>
</source>
</p>
<p>
Finally, if you plan on using Facelets, you should add the following
items to your <code>WEB-INF/web.xml</code>.

<source><![CDATA[
  <context-param>
    <param-name>org.apache.myfaces.trinidad.ALTERNATE_VIEW_HANDLER</param-name>
    <!-- TrinidadFaceletViewHander must be the alternate view handler if SessionChangeManager is used -->
    <param-value>org.apache.myfaces.trinidadinternal.facelets.TrinidadFaceletViewHandler</param-value>
  </context-param>

  <context-param>
    <!--Unfortunately, Facelets provides no hook for plugging the PageResolver into the logic 
      handling "facelets.VIEW_MAPPINGS". You should leave "facelets.VIEW_MAPPINGS" 
      unset and use "org.apache.myfaces.trinidad.FACELETS_VIEW_MAPPINGS" instead.-->
    <param-name>org.apache.myfaces.trinidad.FACELETS_VIEW_MAPPINGS</param-name>
    <param-value>*.xhtml</param-value>
  </context-param>
]]></source>
</p>
<p>
Make sure to also remove the
default <code>com.sun.facelets.FaceletViewHandler</code> from your
<code>faces-config.xml</code>.  Trinidad comes with its own ViewHandler
which needs to be invoked in the correct order with the Facelet specific
ViewHandler noted above. If you specified the alternative view handler parameter
as described above, it will be called by the Apache Trinidad ViewHandler
at the right time. Note that if Session based change persistence is not
used, <code>com.sun.facelets.FaceletViewHandler</code> or any of its custom 
extensions can be set as the alternate view handler. For information about 
enabling Change Persistence feature, please see the 'Configuring Apache Trinidad' 
developer guide chapter.
</p>


</section>
<section name="Configuration for Development">
	If you are an application developer, there are 
</section>

<section name="Demos">
<p>
The demos are available in trinidad-demo.war.
</p>
<p>
<a name="emailjars">
One of the demos allows you to check email. If you are not running in a J2EE 1.3 (or higher) server you will need to add the jars listed below to adf-faces-demo/WEB-INF/lib.
</a>
</p>
<ul>
<li>
<a href="http://java.sun.com/products/javamail/javamail-1_2.html">JavaMail</a> - go to download button for "Download JavaMail API Implementation Version 1.2 " and download 'javamail-1_2.zip'. Extract the jar:
<ul>
<li>mail.jar</li>
</ul>
</li>
<li>
<a href="http://java.sun.com/products/javabeans/glasgow/jaf.html">JavaBeans Activation Framework</a> - go to the download button and download 'jaf-1_0_2-upd.zip'. Extract the jar:
<ul>
<li>activation.jar</li>
</ul>
</li>
</ul>
<p>
To access the demos, start at index.jspx.
</p>
</section>
</body>
</document>
