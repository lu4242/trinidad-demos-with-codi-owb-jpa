<?xml version="1.0" encoding="utf-8"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<faces-config version="1.2" xmlns="http://java.sun.com/xml/ns/javaee"
              xmlns:tr="http://myfaces.apache.org/trinidad"
              xmlns:xi="http://www.w3.org/2001/XInclude"
              xmlns:mfp="http://myfaces.apache.org/maven-faces-plugin"
              xmlns:fmd="http://java.sun.com/xml/ns/javaee/faces/design-time-metadata">
  <component>
    <description><![CDATA[The inputFile component is a component that can
          be used to upload a file.  It supports displaying a label,
          text, and messages.]]>
    </description>
    <icon>
      <!-- small-icon>/org/apache/myfaces/trinidadinternal/metadata/icons/inputFile.png</small-icon -->
    </icon>
    <component-type>org.apache.myfaces.trinidad.CoreInputFile</component-type>
    <component-class>org.apache.myfaces.trinidad.component.core.input.CoreInputFile</component-class>
    <xi:include href="includes/CommonFormControls.xml" xpointer="/faces-config/component/*"/>
    <xi:include href="includes/CommonAttrs.xml" xpointer="/faces-config/component/*"/>
    <xi:include href="includes/CoreJSEvents.xml" xpointer="/faces-config/component/*"/>
    <xi:include href="includes/FocusJSEvents.xml" xpointer="/faces-config/component/*"/>
    <property>
        <description><![CDATA[event handler for when the value is changed.]]>
        </description>
      <property-name>onchange</property-name>
      <property-class>java.lang.String</property-class>
      <property-extension>
        <mfp:property-metadata/>
        <fmd:property-metadata>
          <fmd:category-id>EVENTS</fmd:category-id>
        </fmd:property-metadata>
      </property-extension>
    </property>
    <property>
      <description><![CDATA[event handler for when text becomes selected.]]></description>
      <property-name>onselect</property-name>
      <property-class>java.lang.String</property-class>
      <property-extension>
        <mfp:property-metadata/>
        <fmd:property-metadata>
          <fmd:category-id>EVENTS</fmd:category-id>
        </fmd:property-metadata>
      </property-extension>
    </property>
    <property>
            <description><![CDATA[The size of the text control specified by the number of characters shown.The default value depends on the browser.]]>
      </description>
      <property-name>columns</property-name>
      <property-class>int</property-class>
      <property-extension>
        <fmd:property-metadata>
          <fmd:required>false</fmd:required>
        </fmd:property-metadata>
      </property-extension>
    </property>
    <property>
    <description><![CDATA[<html>An attribute that will simultaneously set both the "label"and "accessKey" attributes from a single value, usingconventional ampersand notation. For example, setting this attribute to "T&amp;ext" willset the label to "Text" and the access key to 'e'.</html>]]>
      </description>
      <property-name>labelAndAccessKey</property-name>
      <property-class>java.lang.String</property-class>
      <property-extension>
        <mfp:property-metadata>
          <mfp:translatable>true</mfp:translatable>
          <mfp:short-description>${md:getTranslatedString("SD_ATTRGROUP_ACCESSKEY_ATTR_VALUEANDACCESSKEY")}</mfp:short-description>
        </mfp:property-metadata>
        <mfp:virtual>true</mfp:virtual>
      </property-extension>
    </property>
    <property>
      <description><![CDATA[whether the associated control displays a visual indication of required user input. If a "required" attribute is also present, both the "required" attribute and the
          "showRequired" attribute must be false for the visual indication not to be displayed.]]>
      </description>
      <property-name>showRequired</property-name>
      <property-class>boolean</property-class>
      <default-value>false</default-value>
      <property-extension>
        <mfp:property-metadata/>
        <fmd:property-metadata>
          <fmd:category-id>APPEARANCE</fmd:category-id>
        </fmd:property-metadata>
      </property-extension>
    </property>
    <property>
        <description><![CDATA[<html> For accessibility reasons, this functionality is not supported in screen reader mode. If the same access key appears in multiple locations in the same page of output, the rendering user agent will cycle among the elements accessed by the similar keys. <p> This attribute is sometimes referred to as the "mnemonic". </p></html>]]>
        </description>
      <property-name>accessKey</property-name>
      <property-class>char</property-class>
      <property-extension>
        <mfp:property-metadata>
          <mfp:short-description>${md:getTranslatedString("SD_ATTRGROUP_ACCESSKEY_ATTR_ACCESSKEY")}</mfp:short-description>
        </mfp:property-metadata>
      </property-extension>
    </property>
    <property>
      <description><![CDATA[whether the component is disabled.]]></description>
      <property-name>disabled</property-name>
      <property-class>boolean</property-class>
      <default-value>false</default-value>
    </property>
    <property>
      <description><![CDATA[the label of the bean.]]></description>
      <property-name>label</property-name>
      <property-class>java.lang.String</property-class>
      <suggested-value>Label {0}</suggested-value>
      <property-extension>
        <mfp:property-metadata>
          <mfp:translatable>true</mfp:translatable>
          <mfp:short-description>${md:getTranslatedString("SD_ATTRGROUP_INLINEMESSAGINGPROMPT_ATTR_PROMPT")}</mfp:short-description>
        </mfp:property-metadata>
        <fmd:property-metadata>
          <fmd:preferred>true</fmd:preferred>
        </fmd:property-metadata>
      </property-extension>
    </property>
    <property>
      <description><![CDATA[a boolean value that controls whether the component
provides label and message support;  when set to "true", the component will
not display messaging support or the label (these attributes may be ignored: label,
labelAndAccessKey, accessKey, showRequired,
tip), and may use simpler layout primitives]]>
      </description>
      <property-name>simple</property-name>
      <property-class>boolean</property-class>
      <default-value>false</default-value>
    </property>
    <component-extension>
      <mfp:component-supertype>org.apache.myfaces.trinidad.Input</mfp:component-supertype>
      <mfp:renderer-type>org.apache.myfaces.trinidad.File</mfp:renderer-type>
      <mfp:tag-name>tr:inputFile</mfp:tag-name>
      <mfp:tag-class>org.apache.myfaces.trinidadinternal.taglib.core.input.CoreInputFileTag</mfp:tag-class>
      <mfp:long-description><![CDATA[<P>
          The inputFile component is a component that can
          be used to upload a file.  Any Trinidad form that contains this component
          must have usesUpload set to true.  The &quot;value&quot; property
          of an inputFile component will be set to an instance
          of the <html:code>org.apache.myfaces.trinidad.model.UploadedFile</html:code>
          class when a file is uploaded (with the appropriate
          <html:code>ValueChangeEvent</html:code> delivered.)  Before
          using this, developers must install the Apache Trinidad filter.
          </P>
          <P>
          The component supports custom converters to transform the <html:code>org.apache.myfaces.trinidad.model.UploadedFile</html:code>.
          To archive this, the the <html:code>getAsObject()</html:code> method is invoked, where the the <html:code>String</html:code> value
          is a key, which must be used to query the actual uploaded file from the request Map:
          </P>
          <pre>
  public Object getAsObject(FacesContext context, UIComponent component, String fileKey)
  {
    UploadedFile file = (UploadedFile)context.getExternalContext().getRequestMap().get(fileKey);
    // do transformation
    return file;
  }
          </pre>]]>
      </mfp:long-description>
      <mfp:example>
        <mfp:source-code>
          <![CDATA[
<tr:form usesUpload="true">
  <tr:inputFile columns="10"
                valueChangeListener="#{backing.fileUploaded}"/>
</tr:form>
          ]]>
        </mfp:source-code>
      </mfp:example>
      <mfp:author>Adam Winer</mfp:author>
      <mfp:component-metadata>
        <mfp:unsupported-agents>pda phone voice</mfp:unsupported-agents>
      </mfp:component-metadata>
      <mfp:javadoc-tags><![CDATA[@see org.apache.myfaces.trinidad.model.UploadedFile
@see org.apache.myfaces.trinidad.webapp.TrinidadFilter
@see org.apache.myfaces.trinidad.model.UploadedFile
@see org.apache.myfaces.trinidad.webapp.TrinidadFilter]]>
      </mfp:javadoc-tags>
      <mfp:uix2-local-name>inputFile</mfp:uix2-local-name>
      <fmd:component-metadata>
        <fmd:allowed-child-components>NONE</fmd:allowed-child-components>
        <fmd:default-property>label</fmd:default-property>
      </fmd:component-metadata>
    </component-extension>
  </component>
</faces-config>
