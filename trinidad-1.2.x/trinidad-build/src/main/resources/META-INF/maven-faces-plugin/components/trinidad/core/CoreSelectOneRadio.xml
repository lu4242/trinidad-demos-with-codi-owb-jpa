<?xml version="1.0" encoding="utf-8"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<faces-config version="1.2" xmlns="http://java.sun.com/xml/ns/javaee"
              xmlns:tr="http://myfaces.apache.org/trinidad"
              xmlns:xi="http://www.w3.org/2001/XInclude"
              xmlns:mfp="http://myfaces.apache.org/maven-faces-plugin"
              xmlns:fmd="http://java.sun.com/xml/ns/javaee/faces/design-time-metadata">
  <component>
    <description><![CDATA[The selectOneRadio component creates a component
          which allows the user to select a single value from a set of items
          displayed as a series of radio buttons.]]>
    </description>
    <icon>
      <!-- small-icon>/org/apache/myfaces/trinidadinternal/metadata/icons/selectOneRadio.png</small-icon -->
    </icon>
    <component-type>org.apache.myfaces.trinidad.CoreSelectOneRadio</component-type>
    <component-class>org.apache.myfaces.trinidad.component.core.input.CoreSelectOneRadio</component-class>
    <xi:include href="includes/CommonFormControls.xml" xpointer="/faces-config/component/*"/>
    <property>
      <description><![CDATA[the label for an additional item that indicates no selection has
been made.  When the user selects this item, "required" validation will
not pass, or a null value will be set if the component is not "required".]]>
      </description>
      <property-name>unselectedLabel</property-name>
      <property-class>java.lang.String</property-class>
      <property-extension>
        <mfp:property-metadata>
          <mfp:translatable>true</mfp:translatable>
        </mfp:property-metadata>
      </property-extension>
    </property>
    <property>
      <description><![CDATA[whether the control displays the buttons
              horizontally or vertically.The valid values are "horizontal" and
              "vertical", the default being "vertical".]]>
      </description>
      <property-name>layout</property-name>
      <property-class>java.lang.String</property-class>
      <default-value>vertical</default-value>
      <property-extension>
        <fmd:property-metadata>
          <fmd:property-values>horizontal vertical</fmd:property-values>
        </fmd:property-metadata>
      </property-extension>
    </property>
    <property>
      <description><![CDATA[whether or not the values are passed through to
        the client. When valuePassThru is false
        the value and the options' values
        are converted to indexes before being sent to the client.
        Therefore, when valuePassThru is false,
        there is no need to write your own converter when you are using custom Objects
        as your values and/or options.
        If you need to know the actual values on the client-side, then you can set
        valuePassThru to true. This will pass the values through to the client,
        using your custom converter if it is available; a custom converter is
        needed if you are using custom objects. The default is false.]]>
      </description>
      <property-name>valuePassThru</property-name>
      <property-class>boolean</property-class>
      <default-value>false</default-value>
      <property-extension>
        <mfp:property-metadata/>
        <fmd:property-metadata>
          <fmd:expert>true</fmd:expert>
        </fmd:property-metadata>
      </property-extension>
    </property>
    <property>
      <description><![CDATA[whether the element is read-only.]]></description>
      <property-name>readOnly</property-name>
      <property-class>boolean</property-class>
      <default-value>false</default-value>
    </property>
    <property>
      <description><![CDATA[whether the element is disabled.]]></description>
      <property-name>disabled</property-name>
      <property-class>boolean</property-class>
      <default-value>false</default-value>
    </property>
    <property>
      <description><![CDATA[the label of the bean.]]></description>
      <property-name>label</property-name>
      <property-class>java.lang.String</property-class>
      <suggested-value>Label {0}</suggested-value>
      <property-extension>
        <mfp:property-metadata>
          <mfp:translatable>true</mfp:translatable>
          <mfp:short-description>${md:getTranslatedString("SD_ATTRGROUP_INLINEMESSAGINGPROMPT_ATTR_PROMPT")}</mfp:short-description>
        </mfp:property-metadata>
        <fmd:property-metadata>
          <fmd:preferred>true</fmd:preferred>
        </fmd:property-metadata>
      </property-extension>
    </property>
    <property>
      <description><![CDATA[a boolean value that controls whether the component
provides label and message support;  when set to "true", the component will
not display messaging support or the label (these attributes may be ignored: label,
labelAndAccessKey, accessKey,  showRequired,
tip), and may use simpler layout primitives]]>
      </description>
      <property-name>simple</property-name>
      <property-class>boolean</property-class>
      <default-value>false</default-value>
    </property>

    <property>
      <description><![CDATA[event handler for when the value is changed.]]></description>
      <property-name>onchange</property-name>
      <property-class>java.lang.String</property-class>
      <property-extension>
        <mfp:property-metadata/>
        <fmd:property-metadata>
          <fmd:category-id>EVENTS</fmd:category-id>
        </fmd:property-metadata>
      </property-extension>
    </property>

    <xi:include href="includes/CommonAttrs.xml" xpointer="/faces-config/component/*"/>
    <xi:include href="includes/CoreJSEvents.xml" xpointer="/faces-config/component/*"/>
    <xi:include href="includes/FocusJSEvents.xml" xpointer="/faces-config/component/*"/>

    <property>
      <description><![CDATA[whether the associated control displays a visual indication of required user input. If a "required" attribute is also present, both the "required" attribute and the
          "showRequired" attribute must be false for the visual indication not to be displayed.]]>
      </description>
      <property-name>showRequired</property-name>
      <property-class>boolean</property-class>
      <default-value>false</default-value>
      <property-extension>
        <mfp:property-metadata/>
        <fmd:property-metadata>
          <fmd:category-id>APPEARANCE</fmd:category-id>
        </fmd:property-metadata>
      </property-extension>
    </property>
    <property>
      <description><![CDATA[<html>
 Character used to gain quick access to
               the form element specified by the
         <code>for</code>, if set (or this component itself,
              if it is a "non-simple" form element).
              For accessibility reasons, this functionality is not supported
              in screen reader mode.
              If the same access key appears in multiple locations in the
              same page of output, the rendering user agent will cycle
              among the elements accessed by the similar keys.
              <p>
                This attribute is sometimes referred to as the "mnemonic".
                </p></html>]]>
      </description>
      <property-name>accessKey</property-name>
      <property-class>char</property-class>
      <property-extension>
        <mfp:property-metadata>
          <mfp:short-description>${md:getTranslatedString("SD_ATTRGROUP_ACCESSKEY_ATTR_ACCESSKEY")}</mfp:short-description>
        </mfp:property-metadata>
      </property-extension>
    </property>
    <property>
      <description><![CDATA[<html>
 An attribute that will simultaneously set both the "value"
              and "accessKey" attributes from a single value, using
              conventional ampersand ('&amp;') notation.
              <p>
              For example, setting this attribute to "L&amp;amp;abel" will
              set the label to "Label" and the access key to 'a'.
              </p></html>]]>
      </description>
      <property-name>labelAndAccessKey</property-name>
      <property-class>java.lang.String</property-class>
      <property-extension>
        <mfp:property-metadata>
          <mfp:translatable>true</mfp:translatable>
          <mfp:short-description>${md:getTranslatedString("SD_ATTRGROUP_ACCESSKEY_ATTR_VALUEANDACCESSKEY")}</mfp:short-description>
        </mfp:property-metadata>
        <mfp:virtual>true</mfp:virtual>
      </property-extension>
    </property>
    <property>
      <description><![CDATA[If set to TRUE on a form element, the component will automatically submit
     the enclosing form when an appropriate action takes place (a click, text
     change, etc.).]]>
      </description>
      <property-name>autoSubmit</property-name>
      <property-class>boolean</property-class>
      <default-value>false</default-value>
    </property>
    <component-extension>
      <mfp:component-supertype>org.apache.myfaces.trinidad.SelectOne</mfp:component-supertype>
      <mfp:renderer-type>org.apache.myfaces.trinidad.Radio</mfp:renderer-type>
      <mfp:tag-name>tr:selectOneRadio</mfp:tag-name>
      <mfp:tag-class>org.apache.myfaces.trinidadinternal.taglib.core.input.CoreSelectOneRadioTag</mfp:tag-class>
      <mfp:long-description><![CDATA[<html><p>The selectOneRadio component creates a component
          which allows the user to select a single value from a set of items
          displayed as a series of radio buttons.
          It can contain any number of
          &lt;f:selectItem&gt;, &lt;f:selectItems&gt;, or
   &lt;tr:selectItem&gt; components,  each of which
          represents an available option that the user may select.</p></html>]]>
      </mfp:long-description>
      <mfp:example>
        <mfp:source-code>
          <![CDATA[
<tr:selectOneRadio value="#{bean.aValue}" required="yes">
  <f:selectItem itemLabel="Option1" itemValue="1"/>
  <f:selectItem itemLabel="Option1" itemValue="2"/>
  <f:selectItem itemLabel="Option1" itemValue="3"/>
</tr:selectOneRadio>
          ]]>
        </mfp:source-code>
      </mfp:example>
      <mfp:author>John Fallows</mfp:author>
      <mfp:component-metadata/>
      <mfp:uix2-local-name>selectOneRadio</mfp:uix2-local-name>
      <fmd:component-metadata>
        <fmd:default-property>label</fmd:default-property>
        <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreSelectItem</fmd:preferred-child-components>
      </fmd:component-metadata>
    </component-extension>
  </component>
</faces-config>
