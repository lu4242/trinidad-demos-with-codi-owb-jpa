<?xml version="1.0" encoding="utf-8"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<faces-config version="1.2" xmlns="http://java.sun.com/xml/ns/javaee"
              xmlns:tr="http://myfaces.apache.org/trinidad"
              xmlns:xi="http://www.w3.org/2001/XInclude"
              xmlns:mfp="http://myfaces.apache.org/maven-faces-plugin"
              xmlns:fmd="http://java.sun.com/xml/ns/javaee/faces/design-time-metadata">
  <component>
    <description><![CDATA[The selectManyShuttle component provides a mechanism for selecting
   multiple values from a list of values by allowing the user to move
   items between two lists.]]>
    </description>
    <icon>
      <!-- small-icon>/org/apache/myfaces/trinidadinternal/metadata/icons/selectManyShuttle.png</small-icon -->
    </icon>
    <component-type>org.apache.myfaces.trinidad.CoreSelectManyShuttle</component-type>
    <component-class>org.apache.myfaces.trinidad.component.core.input.CoreSelectManyShuttle</component-class>
    <facet>
      <description><![CDATA[the filter above the leading list.]]></description>
      <facet-name>filter</facet-name>
      <facet-extension>
        <mfp:facet-metadata/>
        <fmd:facet-metadata>
          <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreSelectOneChoice</fmd:preferred-child-components>
        </fmd:facet-metadata>
      </facet-extension>
    </facet>
    <facet>
      <description><![CDATA[the footer of buttons/images under the leading list.]]></description>
      <facet-name>leadingFooter</facet-name>
      <facet-extension>
        <mfp:facet-metadata/>
        <fmd:facet-metadata>
          <fmd:preferred-child-components>org.apache.myfaces.trinidad.CorePanelGroupLayout</fmd:preferred-child-components>
        </fmd:facet-metadata>
      </facet-extension>
    </facet>
    <facet>
      <description><![CDATA[the footer of buttons/images under the trailing list.]]></description>
      <facet-name>trailingFooter</facet-name>
      <facet-extension>
        <mfp:facet-metadata/>
        <fmd:facet-metadata>
          <fmd:preferred-child-components>org.apache.myfaces.trinidad.CorePanelGroupLayout</fmd:preferred-child-components>
        </fmd:facet-metadata>
      </facet-extension>
    </facet>
    <property>
      <description><![CDATA[whether or not the values are passed through to
        the client. When valuePassThru is false
        the value and the options' values
        are converted to indexes before being sent to the client.
        Therefore, when valuePassThru is false,
        there is no need to write your own converter when you are using custom Objects
        as your values and/or options.
        If you need to know the actual values on the client-side, then you can set
        valuePassThru to true. This will pass the values through to the client,
        using your custom converter if it is available; a custom converter is
        needed if you are using custom objects. The default is false.]]>
      </description>
      <property-name>valuePassThru</property-name>
      <property-class>boolean</property-class>
      <default-value>false</default-value>
      <property-extension>
        <mfp:property-metadata/>
        <fmd:property-metadata>
          <fmd:expert>true</fmd:expert>
        </fmd:property-metadata>
      </property-extension>
    </property>
    <property>
      <description><![CDATA[whether the element is read-only.]]></description>
      <property-name>readOnly</property-name>
      <property-class>boolean</property-class>
      <default-value>false</default-value>
    </property>
    <property>
      <description><![CDATA[whether the element is disabled.]]></description>
      <property-name>disabled</property-name>
      <property-class>boolean</property-class>
      <default-value>false</default-value>
    </property>

    <property>
      <description><![CDATA[event handler for when the value is changed.]]></description>
      <property-name>onchange</property-name>
      <property-class>java.lang.String</property-class>
      <property-extension>
        <mfp:property-metadata/>
        <fmd:property-metadata>
          <fmd:category-id>EVENTS</fmd:category-id>
        </fmd:property-metadata>
      </property-extension>
    </property>

    <xi:include href="includes/CommonAttrs.xml" xpointer="/faces-config/component/*"/>
    <xi:include href="includes/CoreJSEvents.xml" xpointer="/faces-config/component/*"/>
    <xi:include href="includes/FocusJSEvents.xml" xpointer="/faces-config/component/*"/>

    <property>
      <description><![CDATA[the display size(number of items) of the lists. The size
              specified must be between 10 and 20 items. If the attribute is not
              set or has a value less than 10, the size would have a default or
              minimum value of 10. If the attribute value specified is more than
              20 items, the size would have the maximum value of 20.]]>
      </description>
      <property-name>size</property-name>
      <property-class>int</property-class>
      <property-extension/>
    </property>
    <property>
      <description><![CDATA[the header of the leading list of the shuttle.]]></description>
      <property-name>leadingHeader</property-name>
      <property-class>java.lang.String</property-class>
      <property-extension>
        <mfp:property-metadata>
          <mfp:translatable>true</mfp:translatable>
        </mfp:property-metadata>
        <fmd:property-metadata>
          <fmd:preferred>true</fmd:preferred>
        </fmd:property-metadata>
      </property-extension>
    </property>
    <property>
      <description><![CDATA[the header of the trailing list of the shuttle.]]></description>
      <property-name>trailingHeader</property-name>
      <property-class>java.lang.String</property-class>
      <property-extension>
        <mfp:property-metadata>
          <mfp:translatable>true</mfp:translatable>
        </mfp:property-metadata>
        <fmd:property-metadata>
          <fmd:preferred>true</fmd:preferred>
        </fmd:property-metadata>
      </property-extension>
    </property>
    <property>
      <description><![CDATA[whether or not the leading list has an area to display descriptions.]]></description>
      <property-name>leadingDescShown</property-name>
      <property-class>boolean</property-class>
      <default-value>false</default-value>
    </property>
    <property>
      <description><![CDATA[whether or not the trailing list has an area to display descriptions.]]></description>
      <property-name>trailingDescShown</property-name>
      <property-class>boolean</property-class>
      <default-value>false</default-value>
    </property>
    <property>
      <description><![CDATA[the label for the shuttle that is used to identify the component only when displaying error messages. The label specified does not otherwise appear on the page.]]>
      </description>
      <property-name>label</property-name>
      <property-class>java.lang.String</property-class>
      <property-extension/>
    </property>
    <component-extension>
      <mfp:component-supertype>org.apache.myfaces.trinidad.SelectMany</mfp:component-supertype>
      <mfp:renderer-type>org.apache.myfaces.trinidad.Shuttle</mfp:renderer-type>
      <mfp:tag-name>tr:selectManyShuttle</mfp:tag-name>
      <mfp:tag-class>org.apache.myfaces.trinidadinternal.taglib.core.input.CoreSelectManyShuttleTag</mfp:tag-class>
      <mfp:long-description><![CDATA[The selectManyShuttle component provides a mechanism for selecting
   multiple values from a list of values by allowing the user to move
   items between two lists.  The &quot;value&quot; attribute of the selectManyShuttle,
   like any other selectMany component, must be a List or array of values
   that correspond to a value of one of the contained SelectItems.  If a
   value of one of the SelectItems is in the List or array, that item
   will appear in the trailing list.  Looked at another way, you can
   change a selectManyListbox directly into a selectManyShuttle;  instead
   of the &quot;value&quot; driving which items are selected in the listbox, it
   affects which items appear in the trailing list of the shuttle.
         <html:p>
  The selectManyShuttle does not allow for reordering;
  the selectOrderShuttle component adds this functionality
  to selectManyShuttle.  selectManyShuttle also does not include
  automatic messaging support, unlike most other Trinidad messaging
  components.
         </html:p>
          <section name="Attributes">
            <html:p>
              Each list in the shuttle has a header, the
              text of which can be set as the &quot;leadingHeader&quot; attribute
              and the &quot;trailingHeader&quot; attribute.
            </html:p>
            <html:p>
              Each container in the shuttle can have an area to display item
              descriptions below the list. To indicate whether or not
              a container should have such an area set the attributes
              <html:code>&quot;leadingDescShown&quot;</html:code> attribute
              and the <html:code>&quot;trailingDescShown&quot;</html:code> attribute.
            </html:p>
            <html:p>
              To control the display size(number of items) of the lists, the
              size attribute has to be specified. The size specified must be
              between 10 and 20 items. If the attribute is not set or has a
              value less than 10, the size would have a default or minimum
              value of 10. If the attribute value specified is more than 20 items,
              the size would have the maximum value of 20.
            </html:p>
          </section>

          <section name="Shuttle Footers">
            <html:p>
              The shuttle allows the user to place components - typically,
       buttons or icons - below each of the lists.  These
              buttons or icons will take up only one row below the lists
              (no wrapping), and should have a maximum height of 26 pixels
              if the layout of the shuttle is to remain consistent.  The
              buttons and icons should be placed within the
              shuttle as the <html:code>leadingFooter</html:code>
              or the <html:code>trailingFooter</html:code> facet,
              depending on which list the buttons should go under.
              Leave the appropriate facet empty if no footer is
              required under a list.  These buttons and icons can be
              used to perform operations upon the shuttle using a
              ShuttleProxy as described below.
            </html:p>
          </section>
          <section name="Shuttle Filter">
            <html:p>
              The shuttle allows the user to place a filter above the
              list in the leading container. The filter is added as the
       <html:code>filter</html:code> facet.  The filter can be used to
       perform operations upon the shuttle using a ShuttleProxy as
       described below.
            </html:p>
          </section>

          <section name="JavaScript proxies">
            <html:p>
              In some cases, developers will need to use JavaScript to
              manipulate or use the contents of the lists.  This may be
              required as actions for the buttons or icons in the
              shuttle footers or outside the shuttle all together. Thus,
              a set of Javascript utility methods are available that
              operate on the lists.  These are located in the shuttle.js
              Javascript library, which is automatically loaded if you
              use the shuttle.
            </html:p>
            <html:p>
              These methods can be accessed by creating a
              <html:code>ShuttleProxy</html:code> instance based on the
              shuttle client ID and form.
              <html:pre>
                // create the proxy object
                var proxy2 = new ShuttleProxy(&quot;testShuttle2&quot;, &quot;testForm2&quot;);
              </html:pre>
            </html:p>
            <html:p>
              Once the proxy is created, you can use it to gain
              information about the lists or to manipulate the lists in
              the shuttle.  The proxy provides the following functions:

              <html:ul>

                <html:li><html:code>move(fromLeadingList, allItems)</html:code> : moves items from
                  one list to the other.  If <html:code>fromLeadingList</html:code> is true, the items
                  move from the leading list to the trailing list.  If
                  <html:code>fromLeadingList</html:code> is false, the items move the opposite
                  direction.  If <html:code>allItems</html:code> is true, all the items are moved,
                  otherwise only the selected items are moved.</html:li>

                <html:li><html:code>reorderList(down, allTheWay, leadingList)</html:code> : reorders
                  a list.  If <html:code>down</html:code> is true, the items move down in the list,
                  otherwise they move up.  If <html:code>allTheWay</html:code> is true, the items move
                  all the way to the top or bottom of the list depending on the value of
                  <html:code>down</html:code>.  If <html:code>leadingList</html:code> is true, the leading list
                  is reordered, otherwise the trailing list is reordered.</html:li>

                <html:li><html:code>getItems(leadingList)</html:code> : returns an array of
                  <html:code>option</html:code> objects that make up a list.  If <html:code>leadingList</html:code>
                  is true, the array has the leading list's options, otherwise the items
                  are from the trailing list.  Note that the array will not include the
                  horizontal bar at the end of the lists.</html:li>

                <html:li><html:code>getSelectedItems(leadingList)</html:code> : returns an array of
                  <html:code>option</html:code> objects that are selected in a list.  If
                  <html:code>leadingList</html:code> is true, the array has the leading list's options,
                  otherwise the items are from the trailingList.  Note that the array will not
                  include the horizontal bar at the end of the lists.</html:li>

                <html:li><html:code>getItemCount(leadingList)</html:code> : returns the number of
                  items in a list.  If <html:code>leadingList</html:code> is true, the number returned
                  is the number of items in the leading list.  Otherwise, the number returned
                  is the number of items in the trailing list.  Note that the horizontal bar
                  at the end of the lists is not included in this count -- you only get the
                  number of actual items.</html:li>

                <html:li><html:code>getSelectedItemCount(leadingList)</html:code> : returns the number
                  of selected items in a list.  If <html:code>leadingList</html:code> is true, the
                  number returned is the number of selected items in the leading list.
                  Otherwise, the number returned is the number of selected items in the
                  trailing list.  Note that the horizontal bar at the end of the lists is not
                  included in this count -- you only get the number of actual items.</html:li>

                <html:li><html:code>addItem(leadingList, index, text, value, description)</html:code> : adds an item
                  at the given index to a list.  The item is added to the leading list if
                  <html:code>leadingList</html:code> is true, otherwise it is added to the trailing list.
                  The <html:code>index</html:code> should be 0 based.  Thus, to insert an item at
                  the end of a list, set <html:code>index</html:code> to
                  <html:code>shuttleProxy.getItemCount(leadinglist)</html:code>.  The <html:code>text</html:code>
                  parameter specifies the display text for the item, while the
                  <html:code>value</html:code> parameter specifies the value that represents this item
                  upon form submission. The <html:code>description</html:code> parameter specifies a
                  description of the item. The <html:code>description</html:code> parameter can be omitted.</html:li>

                <html:li><html:code>deleteItemByValue(leadingList, value)</html:code> :
                  deletes an item
                  from a list.  The item is deleted from the leading list if
                  <html:code>leadingList</html:code> is true, otherwise it is deleted from the trailing
                  list.  The item deleted is the first item with the value (not text) of
                  <html:code>value</html:code>.</html:li>

                <html:li><html:code>deleteSelectedItems(leadingList)</html:code> : deletes items
                  from a list.  The items are deleted from the leading list if
                  <html:code>leadingList</html:code> is true, otherwise they are deleted from the
                  trailing list.  The items deleted are the items that are selected in the
                  appropriate list.</html:li>

                <html:li><html:code>reset()</html:code> : reset the shuttle
                  to its initial state.</html:li>

              </html:ul>

            </html:p>

          </section>]]>
      </mfp:long-description>
      <mfp:example>
        <mfp:source-code>
          <![CDATA[
<tr:selectManyShuttle value="#{bean.valueList}">
  <f:selectItem itemLabel="Option1" itemValue="1"/>
  <f:selectItem itemLabel="Option1" itemValue="2"/>
  <f:selectItem itemLabel="Option1" itemValue="3"/>
</tr:selectManyShuttle>
          ]]>
        </mfp:source-code>
      </mfp:example>
      <mfp:author>Marissa Treinen</mfp:author>
      <mfp:component-metadata>
        <mfp:unsupported-agents>pda phone voice</mfp:unsupported-agents>
      </mfp:component-metadata>
      <mfp:uix2-local-name>selectManyShuttle</mfp:uix2-local-name>
    </component-extension>
  </component>
</faces-config>
