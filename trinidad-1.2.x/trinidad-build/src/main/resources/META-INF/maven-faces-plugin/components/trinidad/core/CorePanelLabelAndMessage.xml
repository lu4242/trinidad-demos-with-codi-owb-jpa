<?xml version="1.0" encoding="utf-8"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<faces-config version="1.2" xmlns="http://java.sun.com/xml/ns/javaee"
              xmlns:tr="http://myfaces.apache.org/trinidad"
              xmlns:mfp="http://myfaces.apache.org/maven-faces-plugin"
              xmlns:xi="http://www.w3.org/2001/XInclude"
              xmlns:fmd="http://java.sun.com/xml/ns/javaee/faces/design-time-metadata">
  <component>
    <description><![CDATA[This component lays out a label and children.  
      Typically, the only child of this component will be an input element of some sort, 
      but as many children as necessary can be added.  When using panelLabelAndMessage with 
      a Trinidad input component, you should always set simple="true" on the input component. 
      Non-simple Trinidad input components already effectively have all the functionality of 
      panelLabelAndMessage. Note that the label and messages that are rendered only apply to the
      "for" component so messages and labels will not be shown if there are multiple input
      child components.
      To lay out multiple panelLabelAndMessage components - or multiple non-simple Trinidad 
      input components - you can use the panelForm component.  When panelLabelAndMessage 
      components are placed inside a panelForm the labels will line up.]]></description>
    <icon>
      <!-- small-icon>/org/apache/myfaces/trinidadinternal/metadata/icons/panelLabelAndMessage.png</small-icon -->
    </icon>
    <component-type>org.apache.myfaces.trinidad.CorePanelLabelAndMessage</component-type>
    <component-class>org.apache.myfaces.trinidad.component.core.layout.CorePanelLabelAndMessage</component-class>

    <facet>
      <description>This facet should contain field level help.</description>
      <facet-name>help</facet-name>
      <facet-extension>
        <mfp:facet-metadata/>
        <fmd:facet-metadata>
          <fmd:preferred-child-components>org.apache.myfaces.trinidad.CoreOutputText</fmd:preferred-child-components>
        </fmd:facet-metadata>
      </facet-extension>
    </facet>
    <facet>
      <description><![CDATA[Component to render after the children.]]></description>
      <facet-name>end</facet-name>
    </facet>

    <xi:include href="includes/CommonAttrs.xml" xpointer="/faces-config/component/*"/>
    <xi:include href="includes/CoreJSEvents.xml" xpointer="/faces-config/component/*"/>

    <property>
      <description><![CDATA[whether the panel should show an indicator that its contents are required.]]></description>
      <property-name>showRequired</property-name>
      <property-class>boolean</property-class>
      <default-value>false</default-value>
      <property-extension>
        <mfp:property-metadata/>
        <fmd:property-metadata>
          <fmd:category-id>APPEARANCE</fmd:category-id>
        </fmd:property-metadata>
      </property-extension>
    </property>
    <property>
      <description><![CDATA[the label of the bean.]]></description>
      <property-name>label</property-name>
      <property-class>java.lang.String</property-class>
      <suggested-value>Label {0}</suggested-value>
      <property-extension>
        <mfp:property-metadata>
          <mfp:translatable>true</mfp:translatable>
          <mfp:short-description>${md:getTranslatedString("SD_ATTRGROUP_INLINEMESSAGINGPROMPT_ATTR_PROMPT")}</mfp:short-description>
        </mfp:property-metadata>
        <fmd:property-metadata>
          <fmd:preferred>true</fmd:preferred>
        </fmd:property-metadata>
      </property-extension>
    </property>
    <property>
      <description><![CDATA[Specifies inline styles for the label portion of the component, e.g. "vertical-align: bottom;" to align the label to the bottom of the container.]]>
      </description>
      <property-name>labelStyle</property-name>
      <property-class>java.lang.String</property-class>
    </property>
    <property>
      <description><![CDATA[<html>
 Character used to gain quick access to
               the form element specified by the
         <code>for</code>, if set (or this component itself,
              if it is a "non-simple" form element).
              For accessibility reasons, this functionality is not supported
              in screen reader mode.
              If the same access key appears in multiple locations in the
              same page of output, the rendering user agent will cycle
              among the elements accessed by the similar keys.
              <p>
                This attribute is sometimes referred to as the "mnemonic".
                </p></html>]]>
      </description>
      <property-name>accessKey</property-name>
      <property-class>char</property-class>
      <property-extension>
        <mfp:property-metadata>
          <mfp:short-description>${md:getTranslatedString("SD_ATTRGROUP_ACCESSKEY_ATTR_ACCESSKEY")}</mfp:short-description>
        </mfp:property-metadata>
      </property-extension>
    </property>
    <property>
      <description><![CDATA[An attribute that will simultaneously set both the "label" and "accessKey" attributes from a single value, using conventional ampersand notation.  For example, setting this attribute to "T&amp;ext" will set the label to "Text" and the access key to 'e'.]]></description>
      <property-name>labelAndAccessKey</property-name>
      <property-class>java.lang.String</property-class>
      <property-extension>
        <mfp:property-metadata>
          <mfp:translatable>true</mfp:translatable>
          <mfp:short-description>${md:getTranslatedString("SD_ATTRGROUP_ACCESSKEY_ATTR_VALUEANDACCESSKEY")}</mfp:short-description>
        </mfp:property-metadata>
        <mfp:virtual>true</mfp:virtual>
        <fmd:property-metadata>
          <fmd:required>false</fmd:required>
        </fmd:property-metadata>
      </property-extension>
    </property>
    <property>
      <description><![CDATA[The ID of the component that this component's label refers to.]]></description>
      <property-name>for</property-name>
      <property-class>java.lang.String</property-class>
      <property-extension>
        <mfp:property-metadata>
          <mfp:short-description>${md:getTranslatedString("SD_ATTRGROUP_INLINEMESSAGINGTEXT_ATTR_FOR")}</mfp:short-description>
          <mfp:scoped-id-holder>true</mfp:scoped-id-holder>
        </mfp:property-metadata>
        <fmd:property-metadata>
          <fmd:category-id>APPEARANCE</fmd:category-id>
          <fmd:required>false</fmd:required>
        </fmd:property-metadata>
      </property-extension>
    </property>

    <component-extension>
      <mfp:component-supertype>org.apache.myfaces.trinidad.Panel</mfp:component-supertype>
      <mfp:renderer-type>org.apache.myfaces.trinidad.LabelAndMessage</mfp:renderer-type>
      <mfp:tag-name>tr:panelLabelAndMessage</mfp:tag-name>
      <mfp:tag-class>org.apache.myfaces.trinidadinternal.taglib.core.layout.CorePanelLabelAndMessageTag</mfp:tag-class>
      <mfp:long-description><![CDATA[<html:p>
          This component lays out a label, children, tip, and associated message.
          Typically, the only child of this component will be an
          input element of some sort, but as many children as necessary can
          be added.  When using panelLabelAndMessage with a Trinidad
          input component, you should <html:strong>always</html:strong>
          set <html:code>simple=&quot;true&quot;</html:code> on the input
          component.  Non-simple Trinidad input components already
          effectively have all the functionality of
          panelLabelAndMessage.
        </html:p>
        <html:p>
          Note that the label and messages that are rendered only apply to the
          "for" component so messages and labels will not be shown if there are multiple input
          child components.
        </html:p>
        <html:p>
          To lay out multiple panelLabelAndMessage components - or multiple
          non-simple Trinidad input components - you can use the
          panelForm component.  When panelLabelAndMessage components are
          placed inside a panelForm the labels will line up.
        </html:p>]]>
      </mfp:long-description>
      <mfp:example>
        <mfp:source-code>
          <![CDATA[
<tr:panelLabelAndMessage for="selectDate">
  <f:facet name="help">
    <tr:outputText value="Pick a date"/>
  </f:facet>
  <tr:inputDate id="selectDate" simple="true"/>
</tr:panelLabelAndMessage>
          ]]>
        </mfp:source-code>
      </mfp:example>
      <mfp:author>Adam Winer</mfp:author>
      <mfp:component-metadata/>
      <mfp:uix2-local-name>messageLayout</mfp:uix2-local-name>
      <fmd:component-metadata>
        <fmd:default-property>label</fmd:default-property>
      </fmd:component-metadata>
    </component-extension>
  </component>
</faces-config>
