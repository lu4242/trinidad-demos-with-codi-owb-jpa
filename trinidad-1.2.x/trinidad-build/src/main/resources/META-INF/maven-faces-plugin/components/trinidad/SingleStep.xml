<?xml version="1.0" encoding="utf-8"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.
	   
-->
<faces-config version="1.2" xmlns="http://java.sun.com/xml/ns/javaee"
              xmlns:tr="http://myfaces.apache.org/trinidad"
              xmlns:xi="http://www.w3.org/2001/XInclude"
              xmlns:mfp="http://myfaces.apache.org/maven-faces-plugin"
              xmlns:fmd="http://java.sun.com/xml/ns/javaee/faces/design-time-metadata">
  <component>
    <description><![CDATA[UIXSingleStep is a base abstraction for components
          that implement ActionSource and 
          navigate back and forth through a sequence of known steps.]]>
    </description>
    <icon>
      <!-- small-icon>/org/apache/myfaces/trinidadinternal/metadata/icons/singleStep.png</small-icon -->
    </icon>
    <component-type>org.apache.myfaces.trinidad.SingleStep</component-type>
    <component-class>org.apache.myfaces.trinidad.component.UIXSingleStep</component-class>
    <property>
      <description><![CDATA[the current step. The valid range is 1 to maxStep.
              It defaults to 1.]]></description>
      <property-name>selectedStep</property-name>
      <property-class>int</property-class>
      <default-value>1</default-value>
      <property-extension>
        <mfp:alternate-class>long</mfp:alternate-class>
        <mfp:property-metadata/>
        <fmd:property-metadata>
          <fmd:preferred>true</fmd:preferred>
        </fmd:property-metadata>
      </property-extension>
    </property>
    <property>
      <description><![CDATA[the last possible step. If this value is not known, 
              it should be set to
              MAX_VALUE_UNKNOWN (-1),
              which is also the default value. If maxStep is
              MAX_VALUE_UNKNOWN, then no text is rendered between the Back/Next
              buttons. When maxStep is 2 and selectedStep
              is 1, then only a Continue button is rendered.]]>
      </description>
      <property-name>maxStep</property-name>
      <property-class>int</property-class>
      <default-value>-1</default-value>
      <property-extension>
        <mfp:alternate-class>long</mfp:alternate-class>
        <mfp:property-metadata/>
        <fmd:property-metadata>
          <fmd:preferred>true</fmd:preferred>
        </fmd:property-metadata>
      </property-extension>
    </property>
    <property>
      <description><![CDATA[a method reference to an action listener 
             that will be called when the singleStep component navigates
             to the previous step.]]>
      </description>
      <property-name>previousActionListener</property-name>
      <property-class>javax.faces.el.MethodBinding</property-class>
      <property-extension>
        <mfp:method-binding-signature>
          <mfp:parameter-type>javax.faces.event.ActionEvent</mfp:parameter-type>
          <mfp:return-type>void</mfp:return-type>
        </mfp:method-binding-signature>
        <mfp:property-metadata/>
        <mfp:state-holder>yes</mfp:state-holder>
        <fmd:property-metadata>
          <fmd:preferred>true</fmd:preferred>
        </fmd:property-metadata>
      </property-extension>
    </property>
    <property>
      <description><![CDATA[a method reference to an action listener  
             that will be called when the singleStep component navigates
             to the next step.]]>
      </description>
      <property-name>nextActionListener</property-name>
      <property-class>javax.faces.el.MethodBinding</property-class>
      <property-extension>
        <mfp:method-binding-signature>
          <mfp:parameter-type>javax.faces.event.ActionEvent</mfp:parameter-type>
          <mfp:return-type>void</mfp:return-type>
        </mfp:method-binding-signature>
        <mfp:property-metadata/>
        <mfp:state-holder>yes</mfp:state-holder>
        <fmd:property-metadata>
          <fmd:preferred>true</fmd:preferred>
        </fmd:property-metadata>
      </property-extension>
    </property>
    <property>
      <description><![CDATA[a reference to an action method  
             that will be called when the singleStep component navigates
             to the next step, or the static outcome of the action.]]>
      </description>
      <property-name>nextAction</property-name>
      <property-class>javax.faces.el.MethodBinding</property-class>
      <property-extension>
        <mfp:method-binding-signature>
          <mfp:return-type>java.lang.String</mfp:return-type>
        </mfp:method-binding-signature>
        <mfp:property-metadata/>
        <mfp:state-holder>yes</mfp:state-holder>
        <fmd:property-metadata>
          <fmd:preferred>true</fmd:preferred>
        </fmd:property-metadata>
      </property-extension>
    </property>
    <property>
      <description><![CDATA[a reference to an action method  
             that will be called when the singleStep component navigates
             to the previous step, or the static outcome of the action.]]>
      </description>
      <property-name>previousAction</property-name>
      <property-class>javax.faces.el.MethodBinding</property-class>
      <property-extension>
        <mfp:method-binding-signature>
          <mfp:return-type>java.lang.String</mfp:return-type>
        </mfp:method-binding-signature>
        <mfp:property-metadata/>
        <mfp:state-holder>yes</mfp:state-holder>
        <fmd:property-metadata>
          <fmd:preferred>true</fmd:preferred>
        </fmd:property-metadata>
      </property-extension>
    </property>
    <component-extension>
      <mfp:component-family>org.apache.myfaces.trinidad.SingleStep</mfp:component-family>
      <mfp:component-supertype>org.apache.myfaces.trinidad.ComponentBase</mfp:component-supertype>
      <mfp:renderer-type>org.apache.myfaces.trinidad.ButtonBar</mfp:renderer-type>
      <mfp:tag-class>org.apache.myfaces.trinidadinternal.taglib.UIXSingleStepTag</mfp:tag-class>
      <mfp:long-description><![CDATA[UIXSingleStep is a base abstraction for components
          that implement ActionSource and 
          navigate back and forth through a sequence of known steps.
          <section name="Events and Listeners">
            UIXSingleStep implements javax.faces.component.ActionSource, which
            means it is a source of javax.faces.event.ActionEvents.
            <p>
            The ActionEvent is delivered during the Apply Request Values phase 
            when navigating back, and during the 
            Invoke Application phase when navigating forward.
            </p>
            <p>
            The nextAction/previousAction attributes are of type MethodBinding
            and must (if non-null) point to an action method. The nextAction
            method will be called when navigating forward, and the previousAction
            method will be called when navigating back with a singleStep
            component.
            </p>
            <p>
            JSF has a default javax.faces.event.ActionListener that passes the
            nextAction or previousAction outcome to the NavigationHandler.
            </p>              
            <p>
            The nextActionListener/previousActionListener attributes are of 
            type MethodBinding and must (in non-null) point to a method 
            accepting an ActionEvent, with a return type of void.
            When navigating to the previous step, then the previousActionListener
            method is called. When navigating to the next step, the nextActionListener
            method is called.
            </p>       
          </section>]]>
      </mfp:long-description>
      <mfp:author>Jeanne Waldman</mfp:author>
      <mfp:component-metadata/>
      <mfp:tag-class-modifier>abstract</mfp:tag-class-modifier>
      <mfp:event>
        <mfp:description>Event delivered when the "action" of the component has been
invoked;  for example, by clicking on a button.  The action may result
in page navigation.
        </mfp:description>
        <mfp:event-type>javax.faces.Action</mfp:event-type>
        <mfp:event-delivery-phase>Invoke Application</mfp:event-delivery-phase>
        <mfp:event-delivery-phase>Apply Request Values</mfp:event-delivery-phase>
      </mfp:event>
      <fmd:component-metadata>
        <fmd:default-property>selectedStep</fmd:default-property>
      </fmd:component-metadata>
    </component-extension>
  </component>
</faces-config>


