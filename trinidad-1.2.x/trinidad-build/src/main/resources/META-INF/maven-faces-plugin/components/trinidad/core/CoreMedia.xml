<?xml version="1.0" encoding="utf-8"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<faces-config version="1.2" xmlns="http://java.sun.com/xml/ns/javaee"
              xmlns:tr="http://myfaces.apache.org/trinidad"
              xmlns:xi="http://www.w3.org/2001/XInclude"
              xmlns:mfp="http://myfaces.apache.org/maven-faces-plugin"
              xmlns:fmd="http://java.sun.com/xml/ns/javaee/faces/design-time-metadata">
  <component>
    <description><![CDATA[The media component displays media content, such as audio, video,
          or image in a player embedded in the user agent.]]>
    </description>
    <icon>
      <small-icon>/org/apache/myfaces/trinidadinternal/metadata/icons/media.gif</small-icon>
    </icon>
    <component-type>org.apache.myfaces.trinidad.CoreMedia</component-type>
    <component-class>org.apache.myfaces.trinidad.component.core.output.CoreMedia</component-class>
    <property>
      <description><![CDATA[<html> width in pixels to reserve for the media player plus its content.
            As the extra width needed for the media player controls can vary
            from media player to media player and depend on the controls
            displayed in the media player, it is recommended that the
            "innerWidth" attribute be used in preference to this attribute.
            <p>
            If both the "width" and "innerWidth" attributes are specified,
            the "width" attribute will be used.
            </p>
            <p>
            If no width is specified, the width of the media control is
            determined by calculating the "innerWidth" and adding any extra
            width necessary to display the media player controls.
            </p></html>]]>
      </description>
      <property-name>width</property-name>
      <property-class>java.lang.String</property-class>
      <property-extension>
        <mfp:alternate-class>int</mfp:alternate-class>
      </property-extension>
    </property>
    <property>
      <description><![CDATA[<html> height in pixels to reserve for the media player plus its content.
            As the extra height needed for the media player controls can vary
            from media player to media player and depend on the controls
            displayed in the media player, it is recommended that the
            "innerHeight" attribute be used in preference to this attribute.
            <p>
            If both the "height" and "innerHeight" attributes are specified,
            the "height" attribute will be used.
            </p>
            <p>
            If no height is specified, the height of the media control is
            determined by calculating the "innerHeight" and adding any extra
            height necessary to display the media player controls.
            </p></html>]]>
      </description>
      <property-name>height</property-name>
      <property-class>java.lang.String</property-class>
      <property-extension>
        <mfp:alternate-class>int</mfp:alternate-class>
      </property-extension>
    </property>
    <property>
      <description><![CDATA[<html> width in pixels to reserve for the media player content.  This
            will typically be set to the pixel width of the media resource
            to display.
            <p>
            If no "innerWidth" is specified, the "innerWidth" will be defaulted
            based on the content type of the media resource to play.
            </p>
            <p>
            If both the "width" and "innerWidth" attributes are specified,
            the "width" attribute will be used.
            </p></html>]]>
      </description>
      <property-name>innerWidth</property-name>
      <property-class>int</property-class>
    </property>
    <property>
      <description><![CDATA[<html> height in pixels to reserve for the media player content.  This
            will typically be set to the pixel height of the media resource
            to display.
            <p>
            If no "innerHeight" is specified, the "innerHeight" will be defaulted
            based on the content type of the media resource to play.
            </p>
            <p>
            If both the "height" and "innerHeight" attributes are specified,
            the "height" attribute will be used.
            </p></html>]]>
      </description>
      <property-name>innerHeight</property-name>
      <property-class>int</property-class>
    </property>
    <property>
      <description><![CDATA[the URI specifying the location of the media resource.  If no
            contentType is specified, the contentType will be inferred from
            the extension of the source attribute.]]>
      </description>
      <property-name>source</property-name>
      <property-class>java.lang.String</property-class>
      <property-extension>
        <mfp:property-metadata/>
        <fmd:property-metadata>
          <fmd:preferred>true</fmd:preferred>
        </fmd:property-metadata>
      </property-extension>
    </property>
    <property>
      <description><![CDATA[a boolean value that controls whether the media resource loads
            and plays automatically without user initiation.  When set to "true",
            the media resource will load and play as soon as possible.]]>
      </description>
      <property-name>autostart</property-name>
      <property-class>boolean</property-class>
      <default-value>false</default-value>
    </property>
    <property>
      <description><![CDATA[the number of times the media resource will play.  If set to "0",
            the resource will loop until the user stops the playing.]]>
      </description>
      <property-name>playCount</property-name>
      <property-class>int</property-class>
    </property>
    <property>
      <description><![CDATA[the MIME type of the media content returned by the "source" URI.
            This attribute is used as a hint when determining which player to
            pick, how the controls of the player are to be configured, and
            the default size of the media player.  If it isn't specified, an
            attempt will be made to derive this information from the extension
            of the source URI.]]>
      </description>
      <property-name>contentType</property-name>
      <property-class>java.lang.String</property-class>
    </property>
    <property>
      <description><![CDATA[Message to display in the media player while the media resource
              is loading.]]>
      </description>
      <property-name>standbyText</property-name>
      <property-class>java.lang.String</property-class>
      <property-extension>
        <mfp:property-metadata/>
        <fmd:property-metadata>
          <fmd:preferred>true</fmd:preferred>
        </fmd:property-metadata>
      </property-extension>
    </property>
    <property>
      <description><![CDATA[<html> which media player to use to play the media resource. If possible,
              the media control will accomodate this request.  However, if
              the requested player is not available on the user agent, or does
              not support playing the media resource, an alternate player
              will be used instead.  In all cases, the "link" player is used
              as a fallback if no other player is available, or the requested
              player fails for some reason.
              <ul>
                <li>
                  <code>"none"</code>
                  <p>
                   use a link in the user agent page to launch the playing of the
                   media resource.
                  </p>
                  <p>
                   This player setting uses the least amount of space on the page
                   and uses the user agent's built in content type mapping
                   to determine how to display the media resource.
                  </p>
                </li>
                <li>
                  <code>"quicktime"</code>
                  <p>
                   use the Apple QuickTime player.
                  </p>
                </li>
                <li>
                  <code>"windows"</code>
                  <p>
                   use the Windows Media Player.
                  </p>
                </li>
                <li>
                  <code>"real"</code>
                  <p>
                   use the Real Player.
                  </p>
                </li>
              </ul></html>]]>
      </description>
      <property-name>player</property-name>
      <property-class>java.lang.String</property-class>
      <property-extension>
        <fmd:property-metadata>
          <fmd:property-values>windows quicktime link real</fmd:property-values>
        </fmd:property-metadata>
      </property-extension>
    </property>
    <property>
      <description><![CDATA[<html> the set of controls made available to the user for controlling
              the media playback.  The actual set of controls displayed for the
              same value may differ between players.  Likewise, the amount of
              space occupied by the controls will differ from media player to
              media player.  This can cause problems if the size of the
              media control has been specified by the "width" and "height"
              attributes rather than "innerWidth" and "innerHeight".
              <ul>
                <li>
                  <code>"none"</code>
                  <p>
                   don't show any controls for the media player and don't allow
                   control access through alternate means, such as context menus.
                  </p>
                  <p>
                   This value is typically only used in kiosk-type applications
                   where no user control over the playing of the media is allowed.
                   It is typically used in conjunction with setting the
                   "autostart" attribute to "true", and the "playCount" attribute
                   to "0" to cause the media play immediately and then loop.
                  </p>
                </li>
                <li>
                  <code>"noneVisible"</code>
                  <p>
                   don't show any controls for the media player but allow control
                   access through alternate means, such as context menus.
                  </p>
                  <p>
                   This value is typically only used in applications where user
                   control over the playing of the media is allowed, but
                   not encouraged.  It is typically used in conjunction with
                   setting the "autostart" attribute to "true", and the
                   "playCount" attribute to "0" to cause the media to play
                   immediately and then loop.
                  </p>
                </li>
                <li>
                  <code>"minimal"</code>
                  <p>
                    show a minimal set of controls for playing media on the media
                    player.
                  </p>
                  <p>
                   This value gives users control over the most
                   important media playing controls, while occupying the least
                   amount of additional space on the user agent.
                  </p>
                </li>
                <li>
                  <code>"typical"</code>
                  <p>
                   show the typical set of controls for playing media on the
                   media player.
                  </p>
                  <p>
                   This value, the default, gives users control over the most
                   common media playing controls, without occupying an inordinate
                   amount of extra space on the user agent.
                  </p>
                </li>
                <li>
                  <code>"all"</code>
                  <p>
                   Show all available controls for playing media on the media player
                  </p>
                  <p>
                   Using this setting can cause large amount of additional space
                   to be required, depending on the media player used.
                  </p>
                </li>
              </ul>
              <p>
                The default of this attribute is <code>"typical"</code>.
              </p></html>]]>
      </description>
      <property-name>controls</property-name>
      <property-class>java.lang.String</property-class>
      <default-value>typical</default-value>
      <property-extension>
        <fmd:property-metadata>
          <fmd:property-values>noneVisible none typical all minimal</fmd:property-values>
        </fmd:property-metadata>
      </property-extension>
    </property>

    <xi:include href="includes/CommonAttrs.xml" xpointer="/faces-config/component/*"/>
    <xi:include href="includes/CoreJSEvents.xml" xpointer="/faces-config/component/*"/>

    <component-extension>
      <mfp:component-supertype>org.apache.myfaces.trinidad.Object</mfp:component-supertype>
      <mfp:renderer-type>org.apache.myfaces.trinidad.Media</mfp:renderer-type>
      <mfp:tag-name>tr:media</mfp:tag-name>
      <mfp:tag-class>org.apache.myfaces.trinidadinternal.taglib.core.output.CoreMediaTag</mfp:tag-class>
      <mfp:long-description><![CDATA[<html:p>
            The media component displays media content, such as audio, video,
            or image in a player embedded in the user agent.
            The media control displays the media specified by the &quot;source&quot;
            attribute in the appropriate media player.  If a particular
            media player is desired, it can be specified using the &quot;player&quot;
            attribute.  The media control attempts to intelligently handle
            two tricky aspects of cross-platform media display--determining
            the best player to display the media, and sizing the media player.
          </html:p>
          <html:p>
            The media control attempts to pick the appropriate media player
            using the following steps:
            <html:ol>
              <html:li>
                If the primary MIME type of the content is &quot;image&quot;, the
                built in user-agent support will be used.
              </html:li>
              <html:li>
                If a media player has been specified by the &quot;player&quot; attribute
                and that player is available on the user agent and can display
                the media resource, that player will be used.
              </html:li>
              <html:li>
                If one player is especially good at playing the media resource
                and that player is available on the user agent, that player
                will be used.
              </html:li>
              <html:li>
                If one player is especially dominant on the user agent and that
                player can play the media resource, that player will be used.
              </html:li>
              <html:li>
                the &quot;link&quot; player will be used.
              </html:li>
            </html:ol>
          </html:p>
          <html:p>
            The media component supports two approaches to
            sizing the media control
            setting the &quot;width&quot; and &quot;height&quot; attributes, which specify the
            amount of space reserved on the user agent for the media control,
            and setting the &quot;innerWidth&quot; and &quot;innerHeight&quot; attributes, which
            specify the size of the media resource content.  Since it is almost
            impossible to determine the correct width and height to use across
            different players and different player control configurations,
            specifying the &quot;innerWidth&quot; and &quot;innerHeight&quot; is the recommended
            strategy.
          </html:p>
          <html:p>
            If the size of the media control isn't specified by one of the above
            approaches, a default inner size, determined by the content type of
            the media resource, will be used.  This works well for audio content,
            but can cause content to be clipped or occupy too much space for
            video content.
          </html:p>]]>
      </mfp:long-description>
      <mfp:example>
        <mfp:source-description>This sample builds an media control, for playing a house music
            Windows Media file.  The typical set of controls is displayed,
            and the control is sized just large enough to display the controls,
            since the default inner size of audio files is 0 by 0 pixels.
        </mfp:source-description>
        <mfp:source-code>
          <![CDATA[
<tr:media source="house.wma" />
          ]]>
        </mfp:source-code>
      </mfp:example>
      <mfp:author>Blake Sullivan</mfp:author>
      <mfp:component-metadata>
        <mfp:unsupported-agents>pda phone voice</mfp:unsupported-agents>
      </mfp:component-metadata>
      <mfp:java-constructor>
        <mfp:property-name>shortDesc</mfp:property-name>
      </mfp:java-constructor>
      <mfp:uix2-local-name>media</mfp:uix2-local-name>
      <fmd:component-metadata>
        <fmd:allowed-child-components>NONE</fmd:allowed-child-components>
        <fmd:default-property>source</fmd:default-property>
      </fmd:component-metadata>
    </component-extension>
  </component>
</faces-config>
