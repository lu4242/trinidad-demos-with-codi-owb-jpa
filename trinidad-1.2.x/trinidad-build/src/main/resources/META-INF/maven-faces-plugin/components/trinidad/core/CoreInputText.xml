<?xml version="1.0" encoding="utf-8"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one
    or more contributor license agreements.  See the NOTICE file
    distributed with this work for additional information
    regarding copyright ownership.  The ASF licenses this file
    to you under the Apache License, Version 2.0 (the
    "License"); you may not use this file except in compliance
    with the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on an
    "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied.  See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<faces-config version="1.2" xmlns="http://java.sun.com/xml/ns/javaee"
              xmlns:tr="http://myfaces.apache.org/trinidad"
              xmlns:xi="http://www.w3.org/2001/XInclude"
              xmlns:mfp="http://myfaces.apache.org/maven-faces-plugin"
              xmlns:fmd="http://java.sun.com/xml/ns/javaee/faces/design-time-metadata">
  <component>
    <description><![CDATA[The inputText tag creates a browser input text widget;
it may be single-line, multi-line, or a "secret" password field.
It supports displaying a label, text, and messages.]]>
    </description>
    <icon>
      <!-- small-icon>/org/apache/myfaces/trinidadinternal/metadata/icons/inputText.png</small-icon -->
    </icon>
    <component-type>org.apache.myfaces.trinidad.CoreInputText</component-type>
    <component-class>org.apache.myfaces.trinidad.component.core.input.CoreInputText</component-class>
    <xi:include href="includes/CommonFormControls.xml" xpointer="/faces-config/component/*"/>
    <property>
      <description><![CDATA[the number of rows to display in the text control.
              The default is one. Setting to more than one row
              precludes the use of some attributes, such as
              "secret".]]>
      </description>
      <property-name>rows</property-name>
      <property-class>int</property-class>
      <default-value>1</default-value>
      <property-extension>
        <mfp:property-metadata/>
        <fmd:property-metadata>
          <fmd:preferred>true</fmd:preferred>
          <fmd:property-editor>UNSIGNED_INTEGER</fmd:property-editor>
        </fmd:property-metadata>
      </property-extension>
    </property>
    <property>
      <description><![CDATA[the type of text wrapping to be used in a multi-row
              text control. This attribute is ignored for single
              row inputText. By default (or "soft"), multirow text
        wraps visually, but does not include carriage returns in the
              submitted value.  Setting this to "off" will disable wrapping;
              the multirow text will scroll horizontally.  Setting it to "hard"
              specifies that the value of the text should include any
              carriage returns needed to wrap the lines.]]>
      </description>
      <property-name>wrap</property-name>
      <property-class>java.lang.String</property-class>
      <property-extension>
        <fmd:property-metadata>
          <fmd:property-values>soft hard off</fmd:property-values>
        </fmd:property-metadata>
      </property-extension>
    </property>
    <property>
      <description><![CDATA[a boolean value that only applies to single line text
              controls. When set to "true", it hides the actual
              value of the text from the user, and will
              prevent the actual "value" from being shown to the user.]]>
      </description>
      <property-name>secret</property-name>
      <property-class>boolean</property-class>
      <default-value>false</default-value>
    </property>
    <property>
      <description><![CDATA[whether the element is read-only.]]></description>
      <property-name>readOnly</property-name>
      <property-class>boolean</property-class>
      <default-value>false</default-value>
    </property>
    <property>
      <description><![CDATA[whether the element is disabled.]]></description>
      <property-name>disabled</property-name>
      <property-class>boolean</property-class>
      <default-value>false</default-value>
    </property>
    <property>
      <description><![CDATA[the short description of the bean.  This text
         is commonly used by user agents to display tooltip help text.]]>
      </description>
      <property-name>shortDesc</property-name>
      <property-class>java.lang.String</property-class>
      <property-extension>
        <mfp:property-metadata>
          <mfp:translatable>true</mfp:translatable>
        </mfp:property-metadata>
        <fmd:property-metadata>
          <fmd:category-id>GENERAL</fmd:category-id>
        </fmd:property-metadata>
      </property-extension>
    </property>
    <property>
      <description><![CDATA[the IDs of the components that should trigger a partial update.
         This component will listen on the trigger components. If one of the
         trigger components receives an event that will cause it to update
         in some way, this component will request to be updated too.]]>
      </description>
      <property-name>partialTriggers</property-name>
      <property-class>java.lang.String[]</property-class>
      <property-extension>
        <mfp:property-metadata>
          <mfp:multi-scoped-id-holder>true</mfp:multi-scoped-id-holder>
        </mfp:property-metadata>
      </property-extension>      
    </property>
    <property>
      <description><![CDATA[the label of the bean.]]></description>
      <property-name>label</property-name>
      <property-class>java.lang.String</property-class>
      <suggested-value>Label {0}</suggested-value>
      <property-extension>
        <mfp:property-metadata>
          <mfp:translatable>true</mfp:translatable>
          <mfp:short-description>${md:getTranslatedString("SD_ATTRGROUP_INLINEMESSAGINGPROMPT_ATTR_PROMPT")}</mfp:short-description>
        </mfp:property-metadata>
        <fmd:property-metadata>
          <fmd:preferred>true</fmd:preferred>
        </fmd:property-metadata>
      </property-extension>
    </property>
    <property>
      <description><![CDATA[a boolean value that controls whether the component
provides label and message support;  when set to "true", the component will
not display messaging support or the label (these attributes may be ignored: label,
labelAndAccessKey, accessKey, showRequired,
tip), and may use simpler layout primitives]]>
      </description>
      <property-name>simple</property-name>
      <property-class>boolean</property-class>
      <default-value>false</default-value>
    </property>

    <property>
      <description><![CDATA[event handler for when the value is changed.]]></description>
      <property-name>onchange</property-name>
      <property-class>java.lang.String</property-class>
      <property-extension>
        <mfp:property-metadata/>
        <fmd:property-metadata>
          <fmd:category-id>EVENTS</fmd:category-id>
        </fmd:property-metadata>
      </property-extension>
    </property>

    <xi:include href="includes/CoreJSEvents.xml" xpointer="/faces-config/component/*"/>
    <xi:include href="includes/FocusJSEvents.xml" xpointer="/faces-config/component/*"/>

    <property>
      <description><![CDATA[<html>a CSS style class to use for this component.
      The styleClass attribute value is rendered on the root dom element.
      We provide some public style classes you can use that will affect only the 'content' piece of the component:
      AFFieldTextMarker, AFFieldTextLTRMarker, AFPhoneFieldTextMarker, AFPostalCodeFieldTextMarker,
      AFAddressFieldTextMarker, AFFieldNumberMarker.
      You can still modify the public style definitions for these marker style classes
      and it will be picked up by using these "Marker" style class
      because in our base skin implementation we map to the public style by doing this:
      af|inputText.AFFieldNumberMarker af|inputText::content {-tr-rule-ref:selector(".AFFieldNumber")}.
      We recommend that you do not add style properties to the "Marker" style classes.
      They are used solely in the css descendant selector to point to the content pseudo-element.</html>]]>
      </description>
      <property-name>styleClass</property-name>
      <property-class>java.lang.String</property-class>
      <property-extension>
        <mfp:property-metadata/>
        <fmd:property-metadata>
          <fmd:category-id>GENERAL</fmd:category-id>
          <fmd:property-values>AFFieldTextMarker AFFieldTextLTRMarker AFPhoneFieldTextMarker AFPostalCodeFieldTextMarker AFAddressFieldTextMarker AFFieldNumberMarker</fmd:property-values>
        </fmd:property-metadata>
      </property-extension>
    </property>
    <property>
      <description><![CDATA[the inline CSS style for this element]]></description>
      <property-name>inlineStyle</property-name>
      <property-class>java.lang.String</property-class>
      <property-extension>
        <mfp:property-metadata/>
        <fmd:property-metadata>
          <fmd:category-id>GENERAL</fmd:category-id>
        </fmd:property-metadata>
      </property-extension>
    </property>
    <property>
      <description><![CDATA[whether the associated control displays a visual indication of required user input. If a "required" attribute is also present, both the "required" attribute and the
          "showRequired" attribute must be false for the visual indication not to be displayed.]]>
      </description>
      <property-name>showRequired</property-name>
      <property-class>boolean</property-class>
      <default-value>false</default-value>
      <property-extension>
        <mfp:property-metadata/>
        <fmd:property-metadata>
          <fmd:category-id>APPEARANCE</fmd:category-id>
        </fmd:property-metadata>
      </property-extension>
    </property>
    <property>
      <description><![CDATA[the number of columns to display in the text
          control. If no value is specified, a default
          of 30 columns is used. One column is approximately one character
          in the browser's current display font.]]>
      </description>
      <property-name>columns</property-name>
      <property-class>int</property-class>
      <property-extension>
        <mfp:property-metadata/>
        <fmd:property-metadata>
          <fmd:preferred>true</fmd:preferred>
          <fmd:property-editor>UNSIGNED_INTEGER</fmd:property-editor>
        </fmd:property-metadata>
      </property-extension>
    </property>
    <property>
      <description><![CDATA[the maximum number of characters that
          can be entered into the text control. Note that
          this value is independent of the "cols" displayed.
          If set to 0 or less, the maximumLength is ignored.]]>
      </description>
      <property-name>maximumLength</property-name>
      <property-class>int</property-class>
      <property-extension>
        <mfp:property-metadata/>
        <fmd:property-metadata>
          <fmd:property-editor>UNSIGNED_INTEGER</fmd:property-editor>
        </fmd:property-metadata>
      </property-extension>
    </property>
    <property>
      <description><![CDATA[whether previous values of text fields in the form
          should be remembered and offered for auto completion.]]>
      </description>
      <property-name>autoComplete</property-name>
      <property-class>java.lang.String</property-class>
      <default-value>on</default-value>
      <property-extension>
        <fmd:property-metadata>
          <fmd:required>false</fmd:required>
          <fmd:property-values>on off</fmd:property-values>
        </fmd:property-metadata>
      </property-extension>
    </property>
    <property>
      <description><![CDATA[event handler for when text becomes selected.]]></description>
      <property-name>onselect</property-name>
      <property-class>java.lang.String</property-class>
      <property-extension>
        <mfp:property-metadata/>
        <fmd:property-metadata>
          <fmd:category-id>EVENTS</fmd:category-id>
        </fmd:property-metadata>
      </property-extension>
    </property>
    <property>
      <description><![CDATA[<html>
 Character used to gain quick access to
               the form element specified by the
         <code>for</code>, if set (or this component itself,
              if it is a "non-simple" form element).
              For accessibility reasons, this functionality is not supported
              in screen reader mode.
              If the same access key appears in multiple locations in the
              same page of output, the rendering user agent will cycle
              among the elements accessed by the similar keys.
              <p>
                This attribute is sometimes referred to as the "mnemonic".
                </p></html>]]>
      </description>
      <property-name>accessKey</property-name>
      <property-class>char</property-class>
      <property-extension>
        <mfp:property-metadata>
          <mfp:short-description>${md:getTranslatedString("SD_ATTRGROUP_ACCESSKEY_ATTR_ACCESSKEY")}</mfp:short-description>
        </mfp:property-metadata>
      </property-extension>
    </property>
    <property>
      <description><![CDATA[<html>
 An attribute that will simultaneously set both the "value"
              and "accessKey" attributes from a single value, using
              conventional ampersand ('&amp;') notation.
              <p>
              For example, setting this attribute to "L&amp;amp;abel" will
              set the label to "Label" and the access key to 'a'.
              </p></html>]]>
      </description>
      <property-name>labelAndAccessKey</property-name>
      <property-class>java.lang.String</property-class>
      <property-extension>
        <mfp:property-metadata>
          <mfp:translatable>true</mfp:translatable>
          <mfp:short-description>${md:getTranslatedString("SD_ATTRGROUP_ACCESSKEY_ATTR_VALUEANDACCESSKEY")}</mfp:short-description>
        </mfp:property-metadata>
        <mfp:virtual>true</mfp:virtual>
      </property-extension>
    </property>
    <property>
      <description><![CDATA[If set to TRUE on a form element, the component will automatically submit
     the enclosing form when an appropriate action takes place (a click, text
     change, etc.).]]>
      </description>
      <property-name>autoSubmit</property-name>
      <property-class>boolean</property-class>
      <default-value>false</default-value>
    </property>
    <component-extension>
      <mfp:component-supertype>org.apache.myfaces.trinidad.Input</mfp:component-supertype>
      <mfp:renderer-type>org.apache.myfaces.trinidad.Text</mfp:renderer-type>
      <mfp:tag-name>tr:inputText</mfp:tag-name>
      <mfp:tag-class>org.apache.myfaces.trinidadinternal.taglib.core.input.CoreInputTextTag</mfp:tag-class>
      <mfp:long-description><![CDATA[<html><p>
            The inputText component creates a browser input text widget.
            Depending on the value of &quot;rows&quot;, this component either maps to
            a single-row text field or a multi-row text area.
            If the input should be hidden from the user while displayed,
            such as for passwords, the secret property should be set to
            &quot;true&quot;.  It also supports displaying a label, text, and messages.
          </p></html>]]>
      </mfp:long-description>
      <mfp:example>
        <mfp:source-description>Simple text input box with the some default text and a label.</mfp:source-description>
        <mfp:source-code>
          <![CDATA[
<tr:form>
  <tr:inputText label="Input:" value="Some text"/>
</tr:form>
          ]]>
        </mfp:source-code>
      </mfp:example>
      <mfp:example>
        <mfp:source-description>A slightly more interesting example showing a text box
           twenty five characters in length with hidden input text.
        </mfp:source-description>
        <mfp:source-code>
          <![CDATA[
<tr:inputText label="Password:"
              columns="25"
              required="no"
              secret="true"/>
          ]]>
        </mfp:source-code>
      </mfp:example>
      <mfp:example>
        <mfp:source-description>A text input box which will display three rows of wrapped
            input text, with a vertical scrollbar. If the value is
            changed, an alert will say so.
        </mfp:source-description>
        <mfp:source-code>
          <![CDATA[
<tr:inputText label="Alert:"
              rows="3"
              wrap="soft"
              onchange="alert('Text box has changed.')"
              value="Alert on change."/>
          ]]>
        </mfp:source-code>
      </mfp:example>
      <mfp:author>Adam Winer</mfp:author>
      <mfp:component-metadata/>
      <mfp:uix2-local-name>inputText</mfp:uix2-local-name>
      <fmd:component-metadata>
        <fmd:allowed-child-components>NONE</fmd:allowed-child-components>
        <fmd:default-property>label</fmd:default-property>
      </fmd:component-metadata>
    </component-extension>
  </component>
</faces-config>
